// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.0
//
// <auto-generated>
//
// Generated from file `IData.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace teambot
{
    namespace communication
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        public partial class TBFrame : Ice.ObjectImpl
        {
            #region Slice data members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public byte Id;

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public byte SubId;

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public short TimeStamp;

            #endregion

            #region Constructors

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public TBFrame()
            {
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public TBFrame(byte Id, byte SubId, short TimeStamp)
            {
                this.Id = Id;
                this.SubId = SubId;
                this.TimeStamp = TimeStamp;
            }

            #endregion

            #region Slice type-related members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public static new readonly string[] ids__ = 
            {
                "::Ice::Object",
                "::teambot::communication::TBFrame"
            };

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override bool ice_isA(string s)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override bool ice_isA(string s, Ice.Current current__)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string[] ice_ids()
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string[] ice_ids(Ice.Current current__)
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string ice_id()
            {
                return ids__[1];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string ice_id(Ice.Current current__)
            {
                return ids__[1];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public static new string ice_staticId()
            {
                return ids__[1];
            }

            #endregion

            #region Operation dispatch

            #endregion

            #region Marshaling support

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            protected override void writeImpl__(IceInternal.BasicStream os__)
            {
                os__.startWriteSlice(ice_staticId(), -1, true);
                os__.writeByte(Id);
                os__.writeByte(SubId);
                os__.writeShort(TimeStamp);
                os__.endWriteSlice();
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            protected override void readImpl__(IceInternal.BasicStream is__)
            {
                is__.startReadSlice();
                Id = is__.readByte();
                SubId = is__.readByte();
                TimeStamp = is__.readShort();
                is__.endReadSlice();
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        public partial class TBVelocity : teambot.communication.TBFrame
        {
            #region Slice data members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public byte speedLeft;

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public byte speedRight;

            #endregion

            #region Constructors

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public TBVelocity() : base()
            {
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public TBVelocity(byte Id, byte SubId, short TimeStamp, byte speedLeft, byte speedRight) : base(Id, SubId, TimeStamp)
            {
                this.speedLeft = speedLeft;
                this.speedRight = speedRight;
            }

            #endregion

            #region Slice type-related members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public static new readonly string[] ids__ = 
            {
                "::Ice::Object",
                "::teambot::communication::TBFrame",
                "::teambot::communication::TBVelocity"
            };

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override bool ice_isA(string s)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override bool ice_isA(string s, Ice.Current current__)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string[] ice_ids()
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string[] ice_ids(Ice.Current current__)
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string ice_id()
            {
                return ids__[2];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string ice_id(Ice.Current current__)
            {
                return ids__[2];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public static new string ice_staticId()
            {
                return ids__[2];
            }

            #endregion

            #region Operation dispatch

            #endregion

            #region Marshaling support

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            protected override void writeImpl__(IceInternal.BasicStream os__)
            {
                os__.startWriteSlice(ice_staticId(), -1, false);
                os__.writeByte(speedLeft);
                os__.writeByte(speedRight);
                os__.endWriteSlice();
                base.writeImpl__(os__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            protected override void readImpl__(IceInternal.BasicStream is__)
            {
                is__.startReadSlice();
                speedLeft = is__.readByte();
                speedRight = is__.readByte();
                is__.endReadSlice();
                base.readImpl__(is__);
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        public partial class TBPosition : teambot.communication.TBFrame
        {
            #region Slice data members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public short distance;

            #endregion

            #region Constructors

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public TBPosition() : base()
            {
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public TBPosition(byte Id, byte SubId, short TimeStamp, short distance) : base(Id, SubId, TimeStamp)
            {
                this.distance = distance;
            }

            #endregion

            #region Slice type-related members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public static new readonly string[] ids__ = 
            {
                "::Ice::Object",
                "::teambot::communication::TBFrame",
                "::teambot::communication::TBPosition"
            };

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override bool ice_isA(string s)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override bool ice_isA(string s, Ice.Current current__)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string[] ice_ids()
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string[] ice_ids(Ice.Current current__)
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string ice_id()
            {
                return ids__[2];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string ice_id(Ice.Current current__)
            {
                return ids__[2];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public static new string ice_staticId()
            {
                return ids__[2];
            }

            #endregion

            #region Operation dispatch

            #endregion

            #region Marshaling support

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            protected override void writeImpl__(IceInternal.BasicStream os__)
            {
                os__.startWriteSlice(ice_staticId(), -1, false);
                os__.writeShort(distance);
                os__.endWriteSlice();
                base.writeImpl__(os__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            protected override void readImpl__(IceInternal.BasicStream is__)
            {
                is__.startReadSlice();
                distance = is__.readShort();
                is__.endReadSlice();
                base.readImpl__(is__);
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        public partial class TBInfraredData : teambot.communication.TBFrame
        {
            #region Slice data members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public byte leftDistance;

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public byte middleDistance;

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public byte rightDistance;

            #endregion

            #region Constructors

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public TBInfraredData() : base()
            {
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public TBInfraredData(byte Id, byte SubId, short TimeStamp, byte leftDistance, byte middleDistance, byte rightDistance) : base(Id, SubId, TimeStamp)
            {
                this.leftDistance = leftDistance;
                this.middleDistance = middleDistance;
                this.rightDistance = rightDistance;
            }

            #endregion

            #region Slice type-related members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public static new readonly string[] ids__ = 
            {
                "::Ice::Object",
                "::teambot::communication::TBFrame",
                "::teambot::communication::TBInfraredData"
            };

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override bool ice_isA(string s)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override bool ice_isA(string s, Ice.Current current__)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string[] ice_ids()
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string[] ice_ids(Ice.Current current__)
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string ice_id()
            {
                return ids__[2];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string ice_id(Ice.Current current__)
            {
                return ids__[2];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public static new string ice_staticId()
            {
                return ids__[2];
            }

            #endregion

            #region Operation dispatch

            #endregion

            #region Marshaling support

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            protected override void writeImpl__(IceInternal.BasicStream os__)
            {
                os__.startWriteSlice(ice_staticId(), -1, false);
                os__.writeByte(leftDistance);
                os__.writeByte(middleDistance);
                os__.writeByte(rightDistance);
                os__.endWriteSlice();
                base.writeImpl__(os__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            protected override void readImpl__(IceInternal.BasicStream is__)
            {
                is__.startReadSlice();
                leftDistance = is__.readByte();
                middleDistance = is__.readByte();
                rightDistance = is__.readByte();
                is__.endReadSlice();
                base.readImpl__(is__);
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        public partial class TBPositionData : teambot.communication.TBFrame
        {
            #region Slice data members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public short x;

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public short y;

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public short angle;

            #endregion

            #region Constructors

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public TBPositionData() : base()
            {
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public TBPositionData(byte Id, byte SubId, short TimeStamp, short x, short y, short angle) : base(Id, SubId, TimeStamp)
            {
                this.x = x;
                this.y = y;
                this.angle = angle;
            }

            #endregion

            #region Slice type-related members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public static new readonly string[] ids__ = 
            {
                "::Ice::Object",
                "::teambot::communication::TBFrame",
                "::teambot::communication::TBPositionData"
            };

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override bool ice_isA(string s)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override bool ice_isA(string s, Ice.Current current__)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string[] ice_ids()
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string[] ice_ids(Ice.Current current__)
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string ice_id()
            {
                return ids__[2];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string ice_id(Ice.Current current__)
            {
                return ids__[2];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public static new string ice_staticId()
            {
                return ids__[2];
            }

            #endregion

            #region Operation dispatch

            #endregion

            #region Marshaling support

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            protected override void writeImpl__(IceInternal.BasicStream os__)
            {
                os__.startWriteSlice(ice_staticId(), -1, false);
                os__.writeShort(x);
                os__.writeShort(y);
                os__.writeShort(angle);
                os__.endWriteSlice();
                base.writeImpl__(os__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            protected override void readImpl__(IceInternal.BasicStream is__)
            {
                is__.startReadSlice();
                x = is__.readShort();
                y = is__.readShort();
                angle = is__.readShort();
                is__.endReadSlice();
                base.readImpl__(is__);
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        public partial class TBPositionReached : teambot.communication.TBFrame
        {
            #region Slice data members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public short x;

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public short y;

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public short angle;

            #endregion

            #region Constructors

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public TBPositionReached() : base()
            {
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public TBPositionReached(byte Id, byte SubId, short TimeStamp, short x, short y, short angle) : base(Id, SubId, TimeStamp)
            {
                this.x = x;
                this.y = y;
                this.angle = angle;
            }

            #endregion

            #region Slice type-related members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public static new readonly string[] ids__ = 
            {
                "::Ice::Object",
                "::teambot::communication::TBFrame",
                "::teambot::communication::TBPositionReached"
            };

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override bool ice_isA(string s)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override bool ice_isA(string s, Ice.Current current__)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string[] ice_ids()
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string[] ice_ids(Ice.Current current__)
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string ice_id()
            {
                return ids__[2];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string ice_id(Ice.Current current__)
            {
                return ids__[2];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public static new string ice_staticId()
            {
                return ids__[2];
            }

            #endregion

            #region Operation dispatch

            #endregion

            #region Marshaling support

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            protected override void writeImpl__(IceInternal.BasicStream os__)
            {
                os__.startWriteSlice(ice_staticId(), -1, false);
                os__.writeShort(x);
                os__.writeShort(y);
                os__.writeShort(angle);
                os__.endWriteSlice();
                base.writeImpl__(os__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            protected override void readImpl__(IceInternal.BasicStream is__)
            {
                is__.startReadSlice();
                x = is__.readShort();
                y = is__.readShort();
                angle = is__.readShort();
                is__.endReadSlice();
                base.readImpl__(is__);
            }

            #endregion
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public enum DebugGridPointStatus
        {
            Valid,
            Invalid,
            Wall,
            Cyan
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        public partial class DebugGridPoint : Ice.ObjectImpl
        {
            #region Slice data members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public int x;

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public int y;

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public byte alpha;

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public teambot.communication.DebugGridPointStatus status;

            #endregion

            #region Constructors

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public DebugGridPoint()
            {
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public DebugGridPoint(int x, int y, byte alpha, teambot.communication.DebugGridPointStatus status)
            {
                this.x = x;
                this.y = y;
                this.alpha = alpha;
                this.status = status;
            }

            #endregion

            #region Slice type-related members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public static new readonly string[] ids__ = 
            {
                "::Ice::Object",
                "::teambot::communication::DebugGridPoint"
            };

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override bool ice_isA(string s)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override bool ice_isA(string s, Ice.Current current__)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string[] ice_ids()
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string[] ice_ids(Ice.Current current__)
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string ice_id()
            {
                return ids__[1];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public override string ice_id(Ice.Current current__)
            {
                return ids__[1];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            public static new string ice_staticId()
            {
                return ids__[1];
            }

            #endregion

            #region Operation dispatch

            #endregion

            #region Marshaling support

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            protected override void writeImpl__(IceInternal.BasicStream os__)
            {
                os__.startWriteSlice(ice_staticId(), -1, true);
                os__.writeInt(x);
                os__.writeInt(y);
                os__.writeByte(alpha);
                os__.writeEnum((int)status, 3);
                os__.endWriteSlice();
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
            protected override void readImpl__(IceInternal.BasicStream is__)
            {
                is__.startReadSlice();
                x = is__.readInt();
                y = is__.readInt();
                alpha = is__.readByte();
                status = (teambot.communication.DebugGridPointStatus)is__.readEnum(3);
                is__.endReadSlice();
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        public partial interface IDataClient : Ice.Object, IDataClientOperations_, IDataClientOperationsNC_
        {
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        public partial interface IDataServer : Ice.Object, IDataServerOperations_, IDataServerOperationsNC_
        {
        }
    }
}

namespace teambot
{
    namespace communication
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public delegate void Callback_IDataClient_update();

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public delegate void Callback_IDataServer_update();

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public delegate void Callback_IDataServer_addClient();

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public delegate void Callback_IDataServer_debugMap();
    }
}

namespace teambot
{
    namespace communication
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface TBFramePrx : Ice.ObjectPrx
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface TBVelocityPrx : teambot.communication.TBFramePrx
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface TBPositionPrx : teambot.communication.TBFramePrx
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface TBInfraredDataPrx : teambot.communication.TBFramePrx
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface TBPositionDataPrx : teambot.communication.TBFramePrx
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface TBPositionReachedPrx : teambot.communication.TBFramePrx
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface DebugGridPointPrx : Ice.ObjectPrx
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface IDataClientPrx : Ice.ObjectPrx
        {
            void update(teambot.communication.TBFrame data);
            void update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<teambot.communication.Callback_IDataClient_update> begin_update(teambot.communication.TBFrame data);
            Ice.AsyncResult<teambot.communication.Callback_IDataClient_update> begin_update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_update(teambot.communication.TBFrame data, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            void end_update(Ice.AsyncResult r__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface IDataServerPrx : Ice.ObjectPrx
        {
            void update(teambot.communication.TBFrame data);
            void update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<teambot.communication.Callback_IDataServer_update> begin_update(teambot.communication.TBFrame data);
            Ice.AsyncResult<teambot.communication.Callback_IDataServer_update> begin_update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_update(teambot.communication.TBFrame data, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            void end_update(Ice.AsyncResult r__);

            void addClient(Ice.Identity ident);
            void addClient(Ice.Identity ident, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<teambot.communication.Callback_IDataServer_addClient> begin_addClient(Ice.Identity ident);
            Ice.AsyncResult<teambot.communication.Callback_IDataServer_addClient> begin_addClient(Ice.Identity ident, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_addClient(Ice.Identity ident, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_addClient(Ice.Identity ident, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            void end_addClient(Ice.AsyncResult r__);

            void debugMap(teambot.communication.DebugGridPoint[] map, short gridWidth);
            void debugMap(teambot.communication.DebugGridPoint[] map, short gridWidth, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<teambot.communication.Callback_IDataServer_debugMap> begin_debugMap(teambot.communication.DebugGridPoint[] map, short gridWidth);
            Ice.AsyncResult<teambot.communication.Callback_IDataServer_debugMap> begin_debugMap(teambot.communication.DebugGridPoint[] map, short gridWidth, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_debugMap(teambot.communication.DebugGridPoint[] map, short gridWidth, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_debugMap(teambot.communication.DebugGridPoint[] map, short gridWidth, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            void end_debugMap(Ice.AsyncResult r__);
        }
    }
}

namespace teambot
{
    namespace communication
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface IDataClientOperations_
        {
            void update_async(teambot.communication.AMD_IDataClient_update cb__, teambot.communication.TBFrame data, Ice.Current current__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface IDataClientOperationsNC_
        {
            void update_async(teambot.communication.AMD_IDataClient_update cb__, teambot.communication.TBFrame data);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface IDataServerOperations_
        {
            void update_async(teambot.communication.AMD_IDataServer_update cb__, teambot.communication.TBFrame data, Ice.Current current__);

            void addClient(Ice.Identity ident, Ice.Current current__);

            void debugMap_async(teambot.communication.AMD_IDataServer_debugMap cb__, teambot.communication.DebugGridPoint[] map, short gridWidth, Ice.Current current__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface IDataServerOperationsNC_
        {
            void update_async(teambot.communication.AMD_IDataServer_update cb__, teambot.communication.TBFrame data);

            void addClient(Ice.Identity ident);

            void debugMap_async(teambot.communication.AMD_IDataServer_debugMap cb__, teambot.communication.DebugGridPoint[] map, short gridWidth);
        }
    }
}

namespace teambot
{
    namespace communication
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class TBFramePrxHelper : Ice.ObjectPrxHelperBase, TBFramePrx
        {
            #region Asynchronous operations

            #endregion

            #region Checked and unchecked cast operations

            public static TBFramePrx checkedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                TBFramePrx r = b as TBFramePrx;
                if((r == null) && b.ice_isA(ice_staticId()))
                {
                    TBFramePrxHelper h = new TBFramePrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static TBFramePrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                TBFramePrx r = b as TBFramePrx;
                if((r == null) && b.ice_isA(ice_staticId(), ctx))
                {
                    TBFramePrxHelper h = new TBFramePrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static TBFramePrx checkedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId()))
                    {
                        TBFramePrxHelper h = new TBFramePrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static TBFramePrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId(), ctx))
                    {
                        TBFramePrxHelper h = new TBFramePrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static TBFramePrx uncheckedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                TBFramePrx r = b as TBFramePrx;
                if(r == null)
                {
                    TBFramePrxHelper h = new TBFramePrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static TBFramePrx uncheckedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                TBFramePrxHelper h = new TBFramePrxHelper();
                h.copyFrom__(bb);
                return h;
            }

            public static readonly string[] ids__ =
            {
                "::Ice::Object",
                "::teambot::communication::TBFrame"
            };

            public static string ice_staticId()
            {
                return ids__[1];
            }

            #endregion

            #region Marshaling support

            protected override Ice.ObjectDelM_ createDelegateM__()
            {
                return new TBFrameDelM_();
            }

            protected override Ice.ObjectDelD_ createDelegateD__()
            {
                return new TBFrameDelD_();
            }

            public static void write__(IceInternal.BasicStream os__, TBFramePrx v__)
            {
                os__.writeProxy(v__);
            }

            public static TBFramePrx read__(IceInternal.BasicStream is__)
            {
                Ice.ObjectPrx proxy = is__.readProxy();
                if(proxy != null)
                {
                    TBFramePrxHelper result = new TBFramePrxHelper();
                    result.copyFrom__(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class TBVelocityPrxHelper : Ice.ObjectPrxHelperBase, TBVelocityPrx
        {
            #region Asynchronous operations

            #endregion

            #region Checked and unchecked cast operations

            public static TBVelocityPrx checkedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                TBVelocityPrx r = b as TBVelocityPrx;
                if((r == null) && b.ice_isA(ice_staticId()))
                {
                    TBVelocityPrxHelper h = new TBVelocityPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static TBVelocityPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                TBVelocityPrx r = b as TBVelocityPrx;
                if((r == null) && b.ice_isA(ice_staticId(), ctx))
                {
                    TBVelocityPrxHelper h = new TBVelocityPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static TBVelocityPrx checkedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId()))
                    {
                        TBVelocityPrxHelper h = new TBVelocityPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static TBVelocityPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId(), ctx))
                    {
                        TBVelocityPrxHelper h = new TBVelocityPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static TBVelocityPrx uncheckedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                TBVelocityPrx r = b as TBVelocityPrx;
                if(r == null)
                {
                    TBVelocityPrxHelper h = new TBVelocityPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static TBVelocityPrx uncheckedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                TBVelocityPrxHelper h = new TBVelocityPrxHelper();
                h.copyFrom__(bb);
                return h;
            }

            public static readonly string[] ids__ =
            {
                "::Ice::Object",
                "::teambot::communication::TBFrame",
                "::teambot::communication::TBVelocity"
            };

            public static string ice_staticId()
            {
                return ids__[2];
            }

            #endregion

            #region Marshaling support

            protected override Ice.ObjectDelM_ createDelegateM__()
            {
                return new TBVelocityDelM_();
            }

            protected override Ice.ObjectDelD_ createDelegateD__()
            {
                return new TBVelocityDelD_();
            }

            public static void write__(IceInternal.BasicStream os__, TBVelocityPrx v__)
            {
                os__.writeProxy(v__);
            }

            public static TBVelocityPrx read__(IceInternal.BasicStream is__)
            {
                Ice.ObjectPrx proxy = is__.readProxy();
                if(proxy != null)
                {
                    TBVelocityPrxHelper result = new TBVelocityPrxHelper();
                    result.copyFrom__(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class TBPositionPrxHelper : Ice.ObjectPrxHelperBase, TBPositionPrx
        {
            #region Asynchronous operations

            #endregion

            #region Checked and unchecked cast operations

            public static TBPositionPrx checkedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                TBPositionPrx r = b as TBPositionPrx;
                if((r == null) && b.ice_isA(ice_staticId()))
                {
                    TBPositionPrxHelper h = new TBPositionPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static TBPositionPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                TBPositionPrx r = b as TBPositionPrx;
                if((r == null) && b.ice_isA(ice_staticId(), ctx))
                {
                    TBPositionPrxHelper h = new TBPositionPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static TBPositionPrx checkedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId()))
                    {
                        TBPositionPrxHelper h = new TBPositionPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static TBPositionPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId(), ctx))
                    {
                        TBPositionPrxHelper h = new TBPositionPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static TBPositionPrx uncheckedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                TBPositionPrx r = b as TBPositionPrx;
                if(r == null)
                {
                    TBPositionPrxHelper h = new TBPositionPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static TBPositionPrx uncheckedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                TBPositionPrxHelper h = new TBPositionPrxHelper();
                h.copyFrom__(bb);
                return h;
            }

            public static readonly string[] ids__ =
            {
                "::Ice::Object",
                "::teambot::communication::TBFrame",
                "::teambot::communication::TBPosition"
            };

            public static string ice_staticId()
            {
                return ids__[2];
            }

            #endregion

            #region Marshaling support

            protected override Ice.ObjectDelM_ createDelegateM__()
            {
                return new TBPositionDelM_();
            }

            protected override Ice.ObjectDelD_ createDelegateD__()
            {
                return new TBPositionDelD_();
            }

            public static void write__(IceInternal.BasicStream os__, TBPositionPrx v__)
            {
                os__.writeProxy(v__);
            }

            public static TBPositionPrx read__(IceInternal.BasicStream is__)
            {
                Ice.ObjectPrx proxy = is__.readProxy();
                if(proxy != null)
                {
                    TBPositionPrxHelper result = new TBPositionPrxHelper();
                    result.copyFrom__(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class TBInfraredDataPrxHelper : Ice.ObjectPrxHelperBase, TBInfraredDataPrx
        {
            #region Asynchronous operations

            #endregion

            #region Checked and unchecked cast operations

            public static TBInfraredDataPrx checkedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                TBInfraredDataPrx r = b as TBInfraredDataPrx;
                if((r == null) && b.ice_isA(ice_staticId()))
                {
                    TBInfraredDataPrxHelper h = new TBInfraredDataPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static TBInfraredDataPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                TBInfraredDataPrx r = b as TBInfraredDataPrx;
                if((r == null) && b.ice_isA(ice_staticId(), ctx))
                {
                    TBInfraredDataPrxHelper h = new TBInfraredDataPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static TBInfraredDataPrx checkedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId()))
                    {
                        TBInfraredDataPrxHelper h = new TBInfraredDataPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static TBInfraredDataPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId(), ctx))
                    {
                        TBInfraredDataPrxHelper h = new TBInfraredDataPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static TBInfraredDataPrx uncheckedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                TBInfraredDataPrx r = b as TBInfraredDataPrx;
                if(r == null)
                {
                    TBInfraredDataPrxHelper h = new TBInfraredDataPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static TBInfraredDataPrx uncheckedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                TBInfraredDataPrxHelper h = new TBInfraredDataPrxHelper();
                h.copyFrom__(bb);
                return h;
            }

            public static readonly string[] ids__ =
            {
                "::Ice::Object",
                "::teambot::communication::TBFrame",
                "::teambot::communication::TBInfraredData"
            };

            public static string ice_staticId()
            {
                return ids__[2];
            }

            #endregion

            #region Marshaling support

            protected override Ice.ObjectDelM_ createDelegateM__()
            {
                return new TBInfraredDataDelM_();
            }

            protected override Ice.ObjectDelD_ createDelegateD__()
            {
                return new TBInfraredDataDelD_();
            }

            public static void write__(IceInternal.BasicStream os__, TBInfraredDataPrx v__)
            {
                os__.writeProxy(v__);
            }

            public static TBInfraredDataPrx read__(IceInternal.BasicStream is__)
            {
                Ice.ObjectPrx proxy = is__.readProxy();
                if(proxy != null)
                {
                    TBInfraredDataPrxHelper result = new TBInfraredDataPrxHelper();
                    result.copyFrom__(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class TBPositionDataPrxHelper : Ice.ObjectPrxHelperBase, TBPositionDataPrx
        {
            #region Asynchronous operations

            #endregion

            #region Checked and unchecked cast operations

            public static TBPositionDataPrx checkedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                TBPositionDataPrx r = b as TBPositionDataPrx;
                if((r == null) && b.ice_isA(ice_staticId()))
                {
                    TBPositionDataPrxHelper h = new TBPositionDataPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static TBPositionDataPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                TBPositionDataPrx r = b as TBPositionDataPrx;
                if((r == null) && b.ice_isA(ice_staticId(), ctx))
                {
                    TBPositionDataPrxHelper h = new TBPositionDataPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static TBPositionDataPrx checkedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId()))
                    {
                        TBPositionDataPrxHelper h = new TBPositionDataPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static TBPositionDataPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId(), ctx))
                    {
                        TBPositionDataPrxHelper h = new TBPositionDataPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static TBPositionDataPrx uncheckedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                TBPositionDataPrx r = b as TBPositionDataPrx;
                if(r == null)
                {
                    TBPositionDataPrxHelper h = new TBPositionDataPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static TBPositionDataPrx uncheckedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                TBPositionDataPrxHelper h = new TBPositionDataPrxHelper();
                h.copyFrom__(bb);
                return h;
            }

            public static readonly string[] ids__ =
            {
                "::Ice::Object",
                "::teambot::communication::TBFrame",
                "::teambot::communication::TBPositionData"
            };

            public static string ice_staticId()
            {
                return ids__[2];
            }

            #endregion

            #region Marshaling support

            protected override Ice.ObjectDelM_ createDelegateM__()
            {
                return new TBPositionDataDelM_();
            }

            protected override Ice.ObjectDelD_ createDelegateD__()
            {
                return new TBPositionDataDelD_();
            }

            public static void write__(IceInternal.BasicStream os__, TBPositionDataPrx v__)
            {
                os__.writeProxy(v__);
            }

            public static TBPositionDataPrx read__(IceInternal.BasicStream is__)
            {
                Ice.ObjectPrx proxy = is__.readProxy();
                if(proxy != null)
                {
                    TBPositionDataPrxHelper result = new TBPositionDataPrxHelper();
                    result.copyFrom__(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class TBPositionReachedPrxHelper : Ice.ObjectPrxHelperBase, TBPositionReachedPrx
        {
            #region Asynchronous operations

            #endregion

            #region Checked and unchecked cast operations

            public static TBPositionReachedPrx checkedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                TBPositionReachedPrx r = b as TBPositionReachedPrx;
                if((r == null) && b.ice_isA(ice_staticId()))
                {
                    TBPositionReachedPrxHelper h = new TBPositionReachedPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static TBPositionReachedPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                TBPositionReachedPrx r = b as TBPositionReachedPrx;
                if((r == null) && b.ice_isA(ice_staticId(), ctx))
                {
                    TBPositionReachedPrxHelper h = new TBPositionReachedPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static TBPositionReachedPrx checkedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId()))
                    {
                        TBPositionReachedPrxHelper h = new TBPositionReachedPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static TBPositionReachedPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId(), ctx))
                    {
                        TBPositionReachedPrxHelper h = new TBPositionReachedPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static TBPositionReachedPrx uncheckedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                TBPositionReachedPrx r = b as TBPositionReachedPrx;
                if(r == null)
                {
                    TBPositionReachedPrxHelper h = new TBPositionReachedPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static TBPositionReachedPrx uncheckedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                TBPositionReachedPrxHelper h = new TBPositionReachedPrxHelper();
                h.copyFrom__(bb);
                return h;
            }

            public static readonly string[] ids__ =
            {
                "::Ice::Object",
                "::teambot::communication::TBFrame",
                "::teambot::communication::TBPositionReached"
            };

            public static string ice_staticId()
            {
                return ids__[2];
            }

            #endregion

            #region Marshaling support

            protected override Ice.ObjectDelM_ createDelegateM__()
            {
                return new TBPositionReachedDelM_();
            }

            protected override Ice.ObjectDelD_ createDelegateD__()
            {
                return new TBPositionReachedDelD_();
            }

            public static void write__(IceInternal.BasicStream os__, TBPositionReachedPrx v__)
            {
                os__.writeProxy(v__);
            }

            public static TBPositionReachedPrx read__(IceInternal.BasicStream is__)
            {
                Ice.ObjectPrx proxy = is__.readProxy();
                if(proxy != null)
                {
                    TBPositionReachedPrxHelper result = new TBPositionReachedPrxHelper();
                    result.copyFrom__(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class DebugGridPointPrxHelper : Ice.ObjectPrxHelperBase, DebugGridPointPrx
        {
            #region Asynchronous operations

            #endregion

            #region Checked and unchecked cast operations

            public static DebugGridPointPrx checkedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                DebugGridPointPrx r = b as DebugGridPointPrx;
                if((r == null) && b.ice_isA(ice_staticId()))
                {
                    DebugGridPointPrxHelper h = new DebugGridPointPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static DebugGridPointPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                DebugGridPointPrx r = b as DebugGridPointPrx;
                if((r == null) && b.ice_isA(ice_staticId(), ctx))
                {
                    DebugGridPointPrxHelper h = new DebugGridPointPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static DebugGridPointPrx checkedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId()))
                    {
                        DebugGridPointPrxHelper h = new DebugGridPointPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static DebugGridPointPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId(), ctx))
                    {
                        DebugGridPointPrxHelper h = new DebugGridPointPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static DebugGridPointPrx uncheckedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                DebugGridPointPrx r = b as DebugGridPointPrx;
                if(r == null)
                {
                    DebugGridPointPrxHelper h = new DebugGridPointPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static DebugGridPointPrx uncheckedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                DebugGridPointPrxHelper h = new DebugGridPointPrxHelper();
                h.copyFrom__(bb);
                return h;
            }

            public static readonly string[] ids__ =
            {
                "::Ice::Object",
                "::teambot::communication::DebugGridPoint"
            };

            public static string ice_staticId()
            {
                return ids__[1];
            }

            #endregion

            #region Marshaling support

            protected override Ice.ObjectDelM_ createDelegateM__()
            {
                return new DebugGridPointDelM_();
            }

            protected override Ice.ObjectDelD_ createDelegateD__()
            {
                return new DebugGridPointDelD_();
            }

            public static void write__(IceInternal.BasicStream os__, DebugGridPointPrx v__)
            {
                os__.writeProxy(v__);
            }

            public static DebugGridPointPrx read__(IceInternal.BasicStream is__)
            {
                Ice.ObjectPrx proxy = is__.readProxy();
                if(proxy != null)
                {
                    DebugGridPointPrxHelper result = new DebugGridPointPrxHelper();
                    result.copyFrom__(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class currentMapHelper
        {
            public static void write(IceInternal.BasicStream os__, teambot.communication.DebugGridPoint[] v__)
            {
                if(v__ == null)
                {
                    os__.writeSize(0);
                }
                else
                {
                    os__.writeSize(v__.Length);
                    for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                    {
                        os__.writeObject(v__[ix__]);
                    }
                }
            }

            public static teambot.communication.DebugGridPoint[] read(IceInternal.BasicStream is__)
            {
                teambot.communication.DebugGridPoint[] v__;
                {
                    int szx__ = is__.readAndCheckSeqSize(1);
                    v__ = new teambot.communication.DebugGridPoint[szx__];
                    for(int ix__ = 0; ix__ < szx__; ++ix__)
                    {
                        IceInternal.ArrayPatcher<teambot.communication.DebugGridPoint> spx = new IceInternal.ArrayPatcher<teambot.communication.DebugGridPoint>("::teambot::communication::DebugGridPoint", v__, ix__);
                        is__.readObject(spx);
                    }
                }
                return v__;
            }
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class IDataClientPrxHelper : Ice.ObjectPrxHelperBase, IDataClientPrx
        {
            #region Synchronous operations

            public void update(teambot.communication.TBFrame data)
            {
                update(data, null, false);
            }

            public void update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                update(data, context__, true);
            }

            private void update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
            {
                if(explicitContext__ && context__ == null)
                {
                    context__ = emptyContext_;
                }
                Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __update_name, context__);
                int cnt__ = 0;
                try
                {
                    while(true)
                    {
                        Ice.ObjectDel_ delBase__ = null;
                        try
                        {
                            delBase__ = getDelegate__(false);
                            IDataClientDel_ del__ = (IDataClientDel_)delBase__;
                            del__.update(data, context__, observer__);
                            return;
                        }
                        catch(IceInternal.LocalExceptionWrapper ex__)
                        {
                            handleExceptionWrapper__(delBase__, ex__, observer__);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            handleException__(delBase__, ex__, true, ref cnt__, observer__);
                        }
                    }
                }
                finally
                {
                    if(observer__ != null)
                    {
                        observer__.detach();
                    }
                }
            }

            #endregion

            #region Asynchronous operations

            public Ice.AsyncResult<teambot.communication.Callback_IDataClient_update> begin_update(teambot.communication.TBFrame data)
            {
                return begin_update(data, null, false, null, null);
            }

            public Ice.AsyncResult<teambot.communication.Callback_IDataClient_update> begin_update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_update(data, ctx__, true, null, null);
            }

            public Ice.AsyncResult begin_update(teambot.communication.TBFrame data, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_update(data, null, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_update(data, ctx__, true, cb__, cookie__);
            }

            private const string __update_name = "update";

            public void end_update(Ice.AsyncResult r__)
            {
                end__(r__, __update_name);
            }

            private Ice.AsyncResult<teambot.communication.Callback_IDataClient_update> begin_update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
            {
                IceInternal.OnewayOutgoingAsync<teambot.communication.Callback_IDataClient_update> result__ = new IceInternal.OnewayOutgoingAsync<teambot.communication.Callback_IDataClient_update>(this, __update_name, update_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare__(__update_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                    IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                    os__.writeObject(data);
                    os__.writePendingObjects();
                    result__.endWriteParams__();
                    result__.send__(true);
                }
                catch(Ice.LocalException ex__)
                {
                    result__.exceptionAsync__(ex__);
                }
                return result__;
            }

            private void update_completed__(teambot.communication.Callback_IDataClient_update cb__)
            {
                if(cb__ != null)
                {
                    cb__();
                }
            }

            #endregion

            #region Checked and unchecked cast operations

            public static IDataClientPrx checkedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                IDataClientPrx r = b as IDataClientPrx;
                if((r == null) && b.ice_isA(ice_staticId()))
                {
                    IDataClientPrxHelper h = new IDataClientPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static IDataClientPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                IDataClientPrx r = b as IDataClientPrx;
                if((r == null) && b.ice_isA(ice_staticId(), ctx))
                {
                    IDataClientPrxHelper h = new IDataClientPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static IDataClientPrx checkedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId()))
                    {
                        IDataClientPrxHelper h = new IDataClientPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static IDataClientPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId(), ctx))
                    {
                        IDataClientPrxHelper h = new IDataClientPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static IDataClientPrx uncheckedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                IDataClientPrx r = b as IDataClientPrx;
                if(r == null)
                {
                    IDataClientPrxHelper h = new IDataClientPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static IDataClientPrx uncheckedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                IDataClientPrxHelper h = new IDataClientPrxHelper();
                h.copyFrom__(bb);
                return h;
            }

            public static readonly string[] ids__ =
            {
                "::Ice::Object",
                "::teambot::communication::IDataClient"
            };

            public static string ice_staticId()
            {
                return ids__[1];
            }

            #endregion

            #region Marshaling support

            protected override Ice.ObjectDelM_ createDelegateM__()
            {
                return new IDataClientDelM_();
            }

            protected override Ice.ObjectDelD_ createDelegateD__()
            {
                return new IDataClientDelD_();
            }

            public static void write__(IceInternal.BasicStream os__, IDataClientPrx v__)
            {
                os__.writeProxy(v__);
            }

            public static IDataClientPrx read__(IceInternal.BasicStream is__)
            {
                Ice.ObjectPrx proxy = is__.readProxy();
                if(proxy != null)
                {
                    IDataClientPrxHelper result = new IDataClientPrxHelper();
                    result.copyFrom__(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class IDataServerPrxHelper : Ice.ObjectPrxHelperBase, IDataServerPrx
        {
            #region Synchronous operations

            public void addClient(Ice.Identity ident)
            {
                addClient(ident, null, false);
            }

            public void addClient(Ice.Identity ident, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                addClient(ident, context__, true);
            }

            private void addClient(Ice.Identity ident, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
            {
                if(explicitContext__ && context__ == null)
                {
                    context__ = emptyContext_;
                }
                Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __addClient_name, context__);
                int cnt__ = 0;
                try
                {
                    while(true)
                    {
                        Ice.ObjectDel_ delBase__ = null;
                        try
                        {
                            delBase__ = getDelegate__(false);
                            IDataServerDel_ del__ = (IDataServerDel_)delBase__;
                            del__.addClient(ident, context__, observer__);
                            return;
                        }
                        catch(IceInternal.LocalExceptionWrapper ex__)
                        {
                            handleExceptionWrapper__(delBase__, ex__, observer__);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            handleException__(delBase__, ex__, true, ref cnt__, observer__);
                        }
                    }
                }
                finally
                {
                    if(observer__ != null)
                    {
                        observer__.detach();
                    }
                }
            }

            public void debugMap(teambot.communication.DebugGridPoint[] map, short gridWidth)
            {
                debugMap(map, gridWidth, null, false);
            }

            public void debugMap(teambot.communication.DebugGridPoint[] map, short gridWidth, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                debugMap(map, gridWidth, context__, true);
            }

            private void debugMap(teambot.communication.DebugGridPoint[] map, short gridWidth, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
            {
                if(explicitContext__ && context__ == null)
                {
                    context__ = emptyContext_;
                }
                Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __debugMap_name, context__);
                int cnt__ = 0;
                try
                {
                    while(true)
                    {
                        Ice.ObjectDel_ delBase__ = null;
                        try
                        {
                            delBase__ = getDelegate__(false);
                            IDataServerDel_ del__ = (IDataServerDel_)delBase__;
                            del__.debugMap(map, gridWidth, context__, observer__);
                            return;
                        }
                        catch(IceInternal.LocalExceptionWrapper ex__)
                        {
                            handleExceptionWrapper__(delBase__, ex__, observer__);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            handleException__(delBase__, ex__, true, ref cnt__, observer__);
                        }
                    }
                }
                finally
                {
                    if(observer__ != null)
                    {
                        observer__.detach();
                    }
                }
            }

            public void update(teambot.communication.TBFrame data)
            {
                update(data, null, false);
            }

            public void update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                update(data, context__, true);
            }

            private void update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
            {
                if(explicitContext__ && context__ == null)
                {
                    context__ = emptyContext_;
                }
                Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __update_name, context__);
                int cnt__ = 0;
                try
                {
                    while(true)
                    {
                        Ice.ObjectDel_ delBase__ = null;
                        try
                        {
                            delBase__ = getDelegate__(false);
                            IDataServerDel_ del__ = (IDataServerDel_)delBase__;
                            del__.update(data, context__, observer__);
                            return;
                        }
                        catch(IceInternal.LocalExceptionWrapper ex__)
                        {
                            handleExceptionWrapper__(delBase__, ex__, observer__);
                        }
                        catch(Ice.LocalException ex__)
                        {
                            handleException__(delBase__, ex__, true, ref cnt__, observer__);
                        }
                    }
                }
                finally
                {
                    if(observer__ != null)
                    {
                        observer__.detach();
                    }
                }
            }

            #endregion

            #region Asynchronous operations

            public Ice.AsyncResult<teambot.communication.Callback_IDataServer_addClient> begin_addClient(Ice.Identity ident)
            {
                return begin_addClient(ident, null, false, null, null);
            }

            public Ice.AsyncResult<teambot.communication.Callback_IDataServer_addClient> begin_addClient(Ice.Identity ident, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_addClient(ident, ctx__, true, null, null);
            }

            public Ice.AsyncResult begin_addClient(Ice.Identity ident, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_addClient(ident, null, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_addClient(Ice.Identity ident, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_addClient(ident, ctx__, true, cb__, cookie__);
            }

            private const string __addClient_name = "addClient";

            public void end_addClient(Ice.AsyncResult r__)
            {
                end__(r__, __addClient_name);
            }

            private Ice.AsyncResult<teambot.communication.Callback_IDataServer_addClient> begin_addClient(Ice.Identity ident, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
            {
                IceInternal.OnewayOutgoingAsync<teambot.communication.Callback_IDataServer_addClient> result__ = new IceInternal.OnewayOutgoingAsync<teambot.communication.Callback_IDataServer_addClient>(this, __addClient_name, addClient_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare__(__addClient_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                    IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                    if(ident == null)
                    {
                        Ice.Identity tmp__ = new Ice.Identity();
                        tmp__.write__(os__);
                    }
                    else
                    {
                        ident.write__(os__);
                    }
                    result__.endWriteParams__();
                    result__.send__(true);
                }
                catch(Ice.LocalException ex__)
                {
                    result__.exceptionAsync__(ex__);
                }
                return result__;
            }

            private void addClient_completed__(teambot.communication.Callback_IDataServer_addClient cb__)
            {
                if(cb__ != null)
                {
                    cb__();
                }
            }

            public Ice.AsyncResult<teambot.communication.Callback_IDataServer_debugMap> begin_debugMap(teambot.communication.DebugGridPoint[] map, short gridWidth)
            {
                return begin_debugMap(map, gridWidth, null, false, null, null);
            }

            public Ice.AsyncResult<teambot.communication.Callback_IDataServer_debugMap> begin_debugMap(teambot.communication.DebugGridPoint[] map, short gridWidth, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_debugMap(map, gridWidth, ctx__, true, null, null);
            }

            public Ice.AsyncResult begin_debugMap(teambot.communication.DebugGridPoint[] map, short gridWidth, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_debugMap(map, gridWidth, null, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_debugMap(teambot.communication.DebugGridPoint[] map, short gridWidth, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_debugMap(map, gridWidth, ctx__, true, cb__, cookie__);
            }

            private const string __debugMap_name = "debugMap";

            public void end_debugMap(Ice.AsyncResult r__)
            {
                end__(r__, __debugMap_name);
            }

            private Ice.AsyncResult<teambot.communication.Callback_IDataServer_debugMap> begin_debugMap(teambot.communication.DebugGridPoint[] map, short gridWidth, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
            {
                IceInternal.OnewayOutgoingAsync<teambot.communication.Callback_IDataServer_debugMap> result__ = new IceInternal.OnewayOutgoingAsync<teambot.communication.Callback_IDataServer_debugMap>(this, __debugMap_name, debugMap_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare__(__debugMap_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                    IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                    teambot.communication.currentMapHelper.write(os__, map);
                    os__.writeShort(gridWidth);
                    os__.writePendingObjects();
                    result__.endWriteParams__();
                    result__.send__(true);
                }
                catch(Ice.LocalException ex__)
                {
                    result__.exceptionAsync__(ex__);
                }
                return result__;
            }

            private void debugMap_completed__(teambot.communication.Callback_IDataServer_debugMap cb__)
            {
                if(cb__ != null)
                {
                    cb__();
                }
            }

            public Ice.AsyncResult<teambot.communication.Callback_IDataServer_update> begin_update(teambot.communication.TBFrame data)
            {
                return begin_update(data, null, false, null, null);
            }

            public Ice.AsyncResult<teambot.communication.Callback_IDataServer_update> begin_update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_update(data, ctx__, true, null, null);
            }

            public Ice.AsyncResult begin_update(teambot.communication.TBFrame data, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_update(data, null, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_update(data, ctx__, true, cb__, cookie__);
            }

            private const string __update_name = "update";

            public void end_update(Ice.AsyncResult r__)
            {
                end__(r__, __update_name);
            }

            private Ice.AsyncResult<teambot.communication.Callback_IDataServer_update> begin_update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
            {
                IceInternal.OnewayOutgoingAsync<teambot.communication.Callback_IDataServer_update> result__ = new IceInternal.OnewayOutgoingAsync<teambot.communication.Callback_IDataServer_update>(this, __update_name, update_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare__(__update_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                    IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                    os__.writeObject(data);
                    os__.writePendingObjects();
                    result__.endWriteParams__();
                    result__.send__(true);
                }
                catch(Ice.LocalException ex__)
                {
                    result__.exceptionAsync__(ex__);
                }
                return result__;
            }

            private void update_completed__(teambot.communication.Callback_IDataServer_update cb__)
            {
                if(cb__ != null)
                {
                    cb__();
                }
            }

            #endregion

            #region Checked and unchecked cast operations

            public static IDataServerPrx checkedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                IDataServerPrx r = b as IDataServerPrx;
                if((r == null) && b.ice_isA(ice_staticId()))
                {
                    IDataServerPrxHelper h = new IDataServerPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static IDataServerPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                IDataServerPrx r = b as IDataServerPrx;
                if((r == null) && b.ice_isA(ice_staticId(), ctx))
                {
                    IDataServerPrxHelper h = new IDataServerPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static IDataServerPrx checkedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId()))
                    {
                        IDataServerPrxHelper h = new IDataServerPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static IDataServerPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId(), ctx))
                    {
                        IDataServerPrxHelper h = new IDataServerPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static IDataServerPrx uncheckedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                IDataServerPrx r = b as IDataServerPrx;
                if(r == null)
                {
                    IDataServerPrxHelper h = new IDataServerPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static IDataServerPrx uncheckedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                IDataServerPrxHelper h = new IDataServerPrxHelper();
                h.copyFrom__(bb);
                return h;
            }

            public static readonly string[] ids__ =
            {
                "::Ice::Object",
                "::teambot::communication::IDataServer"
            };

            public static string ice_staticId()
            {
                return ids__[1];
            }

            #endregion

            #region Marshaling support

            protected override Ice.ObjectDelM_ createDelegateM__()
            {
                return new IDataServerDelM_();
            }

            protected override Ice.ObjectDelD_ createDelegateD__()
            {
                return new IDataServerDelD_();
            }

            public static void write__(IceInternal.BasicStream os__, IDataServerPrx v__)
            {
                os__.writeProxy(v__);
            }

            public static IDataServerPrx read__(IceInternal.BasicStream is__)
            {
                Ice.ObjectPrx proxy = is__.readProxy();
                if(proxy != null)
                {
                    IDataServerPrxHelper result = new IDataServerPrxHelper();
                    result.copyFrom__(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }
    }
}

namespace teambot
{
    namespace communication
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface TBFrameDel_ : Ice.ObjectDel_
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface TBVelocityDel_ : teambot.communication.TBFrameDel_
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface TBPositionDel_ : teambot.communication.TBFrameDel_
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface TBInfraredDataDel_ : teambot.communication.TBFrameDel_
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface TBPositionDataDel_ : teambot.communication.TBFrameDel_
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface TBPositionReachedDel_ : teambot.communication.TBFrameDel_
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface DebugGridPointDel_ : Ice.ObjectDel_
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface IDataClientDel_ : Ice.ObjectDel_
        {
            void update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface IDataServerDel_ : Ice.ObjectDel_
        {
            void update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

            void addClient(Ice.Identity ident, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

            void debugMap(teambot.communication.DebugGridPoint[] map, short gridWidth, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);
        }
    }
}

namespace teambot
{
    namespace communication
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class TBFrameDelM_ : Ice.ObjectDelM_, TBFrameDel_
        {
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class TBVelocityDelM_ : Ice.ObjectDelM_, TBVelocityDel_
        {
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class TBPositionDelM_ : Ice.ObjectDelM_, TBPositionDel_
        {
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class TBInfraredDataDelM_ : Ice.ObjectDelM_, TBInfraredDataDel_
        {
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class TBPositionDataDelM_ : Ice.ObjectDelM_, TBPositionDataDel_
        {
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class TBPositionReachedDelM_ : Ice.ObjectDelM_, TBPositionReachedDel_
        {
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class DebugGridPointDelM_ : Ice.ObjectDelM_, DebugGridPointDel_
        {
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class IDataClientDelM_ : Ice.ObjectDelM_, IDataClientDel_
        {
            public void update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
            {
                IceInternal.Outgoing og__ = handler__.getOutgoing("update", Ice.OperationMode.Normal, context__, observer__);
                try
                {
                    try
                    {
                        IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                        os__.writeObject(data);
                        os__.writePendingObjects();
                        og__.endWriteParams();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        og__.abort(ex__);
                    }
                    bool ok__ = og__.invoke();
                    if(og__.hasResponse())
                    {
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                }
                finally
                {
                    handler__.reclaimOutgoing(og__);
                }
            }
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class IDataServerDelM_ : Ice.ObjectDelM_, IDataServerDel_
        {
            public void addClient(Ice.Identity ident, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
            {
                IceInternal.Outgoing og__ = handler__.getOutgoing("addClient", Ice.OperationMode.Normal, context__, observer__);
                try
                {
                    try
                    {
                        IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                        if(ident == null)
                        {
                            Ice.Identity tmp__ = new Ice.Identity();
                            tmp__.write__(os__);
                        }
                        else
                        {
                            ident.write__(os__);
                        }
                        og__.endWriteParams();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        og__.abort(ex__);
                    }
                    bool ok__ = og__.invoke();
                    if(og__.hasResponse())
                    {
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                }
                finally
                {
                    handler__.reclaimOutgoing(og__);
                }
            }

            public void debugMap(teambot.communication.DebugGridPoint[] map, short gridWidth, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
            {
                IceInternal.Outgoing og__ = handler__.getOutgoing("debugMap", Ice.OperationMode.Normal, context__, observer__);
                try
                {
                    try
                    {
                        IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                        teambot.communication.currentMapHelper.write(os__, map);
                        os__.writeShort(gridWidth);
                        os__.writePendingObjects();
                        og__.endWriteParams();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        og__.abort(ex__);
                    }
                    bool ok__ = og__.invoke();
                    if(og__.hasResponse())
                    {
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                }
                finally
                {
                    handler__.reclaimOutgoing(og__);
                }
            }

            public void update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
            {
                IceInternal.Outgoing og__ = handler__.getOutgoing("update", Ice.OperationMode.Normal, context__, observer__);
                try
                {
                    try
                    {
                        IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                        os__.writeObject(data);
                        os__.writePendingObjects();
                        og__.endWriteParams();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        og__.abort(ex__);
                    }
                    bool ok__ = og__.invoke();
                    if(og__.hasResponse())
                    {
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.readEmptyParams();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                }
                finally
                {
                    handler__.reclaimOutgoing(og__);
                }
            }
        }
    }
}

namespace teambot
{
    namespace communication
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class TBFrameDelD_ : Ice.ObjectDelD_, TBFrameDel_
        {
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class TBVelocityDelD_ : Ice.ObjectDelD_, TBVelocityDel_
        {
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class TBPositionDelD_ : Ice.ObjectDelD_, TBPositionDel_
        {
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class TBInfraredDataDelD_ : Ice.ObjectDelD_, TBInfraredDataDel_
        {
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class TBPositionDataDelD_ : Ice.ObjectDelD_, TBPositionDataDel_
        {
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class TBPositionReachedDelD_ : Ice.ObjectDelD_, TBPositionReachedDel_
        {
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class DebugGridPointDelD_ : Ice.ObjectDelD_, DebugGridPointDel_
        {
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class IDataClientDelD_ : Ice.ObjectDelD_, IDataClientDel_
        {
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
            public void update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
            {
                throw new Ice.CollocationOptimizationException();
            }
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public sealed class IDataServerDelD_ : Ice.ObjectDelD_, IDataServerDel_
        {
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
            public void addClient(Ice.Identity ident, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
            {
                Ice.Current current__ = new Ice.Current();
                initCurrent__(ref current__, "addClient", Ice.OperationMode.Normal, context__);
                IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                {
                    IDataServer servant__ = null;
                    try
                    {
                        servant__ = (IDataServer)obj__;
                    }
                    catch(_System.InvalidCastException)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }
                    servant__.addClient(ident, current__);
                    return Ice.DispatchStatus.DispatchOK;
                };
                IceInternal.Direct direct__ = null;
                try
                {
                    direct__ = new IceInternal.Direct(current__, run__);
                    try
                    {
                        Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                        _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                    }
                    finally
                    {
                        direct__.destroy();
                    }
                }
                catch(Ice.SystemException)
                {
                    throw;
                }
                catch(_System.Exception ex__)
                {
                    IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                }
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
            public void debugMap(teambot.communication.DebugGridPoint[] map, short gridWidth, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
            {
                throw new Ice.CollocationOptimizationException();
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
            public void update(teambot.communication.TBFrame data, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
            {
                throw new Ice.CollocationOptimizationException();
            }
        }
    }
}

namespace teambot
{
    namespace communication
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public abstract class IDataClientDisp_ : Ice.ObjectImpl, IDataClient
        {
            #region Slice operations

            public void update_async(teambot.communication.AMD_IDataClient_update cb__, teambot.communication.TBFrame data)
            {
                update_async(cb__, data, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract void update_async(teambot.communication.AMD_IDataClient_update cb__, teambot.communication.TBFrame data, Ice.Current current__);

            #endregion

            #region Slice type-related members

            public static new readonly string[] ids__ = 
            {
                "::Ice::Object",
                "::teambot::communication::IDataClient"
            };

            public override bool ice_isA(string s)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            public override bool ice_isA(string s, Ice.Current current__)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            public override string[] ice_ids()
            {
                return ids__;
            }

            public override string[] ice_ids(Ice.Current current__)
            {
                return ids__;
            }

            public override string ice_id()
            {
                return ids__[1];
            }

            public override string ice_id(Ice.Current current__)
            {
                return ids__[1];
            }

            public static new string ice_staticId()
            {
                return ids__[1];
            }

            #endregion

            #region Operation dispatch

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus update___(IDataClient obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                IceInternal.ParamPatcher<teambot.communication.TBFrame> data__PP = new IceInternal.ParamPatcher<teambot.communication.TBFrame>(teambot.communication.TBFrame.ice_staticId());
                is__.readObject(data__PP);
                is__.readPendingObjects();
                inS__.endReadParams();
                AMD_IDataClient_update cb__ = new _AMD_IDataClient_update(inS__);
                try
                {
                    obj__.update_async(cb__, data__PP.value, current__);
                }
                catch(_System.Exception ex__)
                {
                    cb__.ice_exception(ex__);
                }
                return Ice.DispatchStatus.DispatchAsync;
            }

            private static string[] all__ =
            {
                "ice_id",
                "ice_ids",
                "ice_isA",
                "ice_ping",
                "update"
            };

            public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
            {
                int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                if(pos < 0)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }

                switch(pos)
                {
                    case 0:
                    {
                        return ice_id___(this, inS__, current__);
                    }
                    case 1:
                    {
                        return ice_ids___(this, inS__, current__);
                    }
                    case 2:
                    {
                        return ice_isA___(this, inS__, current__);
                    }
                    case 3:
                    {
                        return ice_ping___(this, inS__, current__);
                    }
                    case 4:
                    {
                        return update___(this, inS__, current__);
                    }
                }

                _System.Diagnostics.Debug.Assert(false);
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            #endregion

            #region Marshaling support

            protected override void writeImpl__(IceInternal.BasicStream os__)
            {
                os__.startWriteSlice(ice_staticId(), -1, true);
                os__.endWriteSlice();
            }

            protected override void readImpl__(IceInternal.BasicStream is__)
            {
                is__.startReadSlice();
                is__.endReadSlice();
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public abstract class IDataServerDisp_ : Ice.ObjectImpl, IDataServer
        {
            #region Slice operations

            public void update_async(teambot.communication.AMD_IDataServer_update cb__, teambot.communication.TBFrame data)
            {
                update_async(cb__, data, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract void update_async(teambot.communication.AMD_IDataServer_update cb__, teambot.communication.TBFrame data, Ice.Current current__);

            public void addClient(Ice.Identity ident)
            {
                addClient(ident, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract void addClient(Ice.Identity ident, Ice.Current current__);

            public void debugMap_async(teambot.communication.AMD_IDataServer_debugMap cb__, teambot.communication.DebugGridPoint[] map, short gridWidth)
            {
                debugMap_async(cb__, map, gridWidth, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract void debugMap_async(teambot.communication.AMD_IDataServer_debugMap cb__, teambot.communication.DebugGridPoint[] map, short gridWidth, Ice.Current current__);

            #endregion

            #region Slice type-related members

            public static new readonly string[] ids__ = 
            {
                "::Ice::Object",
                "::teambot::communication::IDataServer"
            };

            public override bool ice_isA(string s)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            public override bool ice_isA(string s, Ice.Current current__)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            public override string[] ice_ids()
            {
                return ids__;
            }

            public override string[] ice_ids(Ice.Current current__)
            {
                return ids__;
            }

            public override string ice_id()
            {
                return ids__[1];
            }

            public override string ice_id(Ice.Current current__)
            {
                return ids__[1];
            }

            public static new string ice_staticId()
            {
                return ids__[1];
            }

            #endregion

            #region Operation dispatch

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus update___(IDataServer obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                IceInternal.ParamPatcher<teambot.communication.TBFrame> data__PP = new IceInternal.ParamPatcher<teambot.communication.TBFrame>(teambot.communication.TBFrame.ice_staticId());
                is__.readObject(data__PP);
                is__.readPendingObjects();
                inS__.endReadParams();
                AMD_IDataServer_update cb__ = new _AMD_IDataServer_update(inS__);
                try
                {
                    obj__.update_async(cb__, data__PP.value, current__);
                }
                catch(_System.Exception ex__)
                {
                    cb__.ice_exception(ex__);
                }
                return Ice.DispatchStatus.DispatchAsync;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus addClient___(IDataServer obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                Ice.Identity ident;
                ident = null;
                if(ident == null)
                {
                    ident = new Ice.Identity();
                }
                ident.read__(is__);
                inS__.endReadParams();
                obj__.addClient(ident, current__);
                inS__.writeEmptyParams__();
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus debugMap___(IDataServer obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                teambot.communication.DebugGridPoint[] map;
                short gridWidth;
                map = teambot.communication.currentMapHelper.read(is__);
                gridWidth = is__.readShort();
                is__.readPendingObjects();
                inS__.endReadParams();
                AMD_IDataServer_debugMap cb__ = new _AMD_IDataServer_debugMap(inS__);
                try
                {
                    obj__.debugMap_async(cb__, map, gridWidth, current__);
                }
                catch(_System.Exception ex__)
                {
                    cb__.ice_exception(ex__);
                }
                return Ice.DispatchStatus.DispatchAsync;
            }

            private static string[] all__ =
            {
                "addClient",
                "debugMap",
                "ice_id",
                "ice_ids",
                "ice_isA",
                "ice_ping",
                "update"
            };

            public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
            {
                int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                if(pos < 0)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }

                switch(pos)
                {
                    case 0:
                    {
                        return addClient___(this, inS__, current__);
                    }
                    case 1:
                    {
                        return debugMap___(this, inS__, current__);
                    }
                    case 2:
                    {
                        return ice_id___(this, inS__, current__);
                    }
                    case 3:
                    {
                        return ice_ids___(this, inS__, current__);
                    }
                    case 4:
                    {
                        return ice_isA___(this, inS__, current__);
                    }
                    case 5:
                    {
                        return ice_ping___(this, inS__, current__);
                    }
                    case 6:
                    {
                        return update___(this, inS__, current__);
                    }
                }

                _System.Diagnostics.Debug.Assert(false);
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            #endregion

            #region Marshaling support

            protected override void writeImpl__(IceInternal.BasicStream os__)
            {
                os__.startWriteSlice(ice_staticId(), -1, true);
                os__.endWriteSlice();
            }

            protected override void readImpl__(IceInternal.BasicStream is__)
            {
                is__.startReadSlice();
                is__.endReadSlice();
            }

            #endregion
        }
    }
}

namespace teambot
{
    namespace communication
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface AMD_IDataClient_update : Ice.AMDCallback
        {
            void ice_response();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        class _AMD_IDataClient_update : IceInternal.IncomingAsync, AMD_IDataClient_update
        {
            public _AMD_IDataClient_update(IceInternal.Incoming inc) : base(inc)
            {
            }

            public void ice_response()
            {
                if(validateResponse__(true))
                {
                    writeEmptyParams__();
                    response__();
                }
            }
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface AMD_IDataServer_update : Ice.AMDCallback
        {
            void ice_response();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        class _AMD_IDataServer_update : IceInternal.IncomingAsync, AMD_IDataServer_update
        {
            public _AMD_IDataServer_update(IceInternal.Incoming inc) : base(inc)
            {
            }

            public void ice_response()
            {
                if(validateResponse__(true))
                {
                    writeEmptyParams__();
                    response__();
                }
            }
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        public interface AMD_IDataServer_debugMap : Ice.AMDCallback
        {
            void ice_response();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.0")]
        class _AMD_IDataServer_debugMap : IceInternal.IncomingAsync, AMD_IDataServer_debugMap
        {
            public _AMD_IDataServer_debugMap(IceInternal.Incoming inc) : base(inc)
            {
            }

            public void ice_response()
            {
                if(validateResponse__(true))
                {
                    writeEmptyParams__();
                    response__();
                }
            }
        }
    }
}
