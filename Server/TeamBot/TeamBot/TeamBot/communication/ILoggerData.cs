// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `ILoggerData.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace Communication
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public enum DataTypeIce
    {
        PICTURE,
        DEBUG,
        INFO,
        LOGGERINFO,
        ACCELEROMETER,
        GYROSCOPE,
        UNSPECIFIED
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class ByteData : Ice.ObjectImpl
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public Communication.DataTypeIce type;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public long timeStamp;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public byte[] byteArrayData;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public ByteData()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public ByteData(Communication.DataTypeIce type, long timeStamp, byte[] byteArrayData)
        {
            this.type = type;
            this.timeStamp = timeStamp;
            this.byteArrayData = byteArrayData;
        }

        #endregion

        #region Slice type-related members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static new readonly string[] ids__ = 
        {
            "::Communication::ByteData",
            "::Ice::Object"
        };

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override string[] ice_ids()
        {
            return ids__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override string ice_id()
        {
            return ids__[0];
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        #endregion

        #region Marshaling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void write__(IceInternal.BasicStream os__)
        {
            os__.writeTypeId(ice_staticId());
            os__.startWriteSlice();
            os__.writeByte((byte)type, 7);
            os__.writeLong(timeStamp);
            os__.writeByteSeq(byteArrayData);
            os__.endWriteSlice();
            base.write__(os__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void read__(IceInternal.BasicStream is__, bool rid__)
        {
            if(rid__)
            {
                /* string myId = */ is__.readTypeId();
            }
            is__.startReadSlice();
            type = (Communication.DataTypeIce)is__.readByte(7);
            timeStamp = is__.readLong();
            byteArrayData = is__.readByteSeq();
            is__.endReadSlice();
            base.read__(is__, true);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void write__(Ice.OutputStream outS__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type Communication::ByteData was not generated with stream support";
            throw ex;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void read__(Ice.InputStream inS__, bool rid__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type Communication::ByteData was not generated with stream support";
            throw ex;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class FloatData : Ice.ObjectImpl
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public Communication.DataTypeIce type;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public long timeStamp;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public float[] floatArrayData;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public FloatData()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public FloatData(Communication.DataTypeIce type, long timeStamp, float[] floatArrayData)
        {
            this.type = type;
            this.timeStamp = timeStamp;
            this.floatArrayData = floatArrayData;
        }

        #endregion

        #region Slice type-related members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static new readonly string[] ids__ = 
        {
            "::Communication::FloatData",
            "::Ice::Object"
        };

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override string[] ice_ids()
        {
            return ids__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override string ice_id()
        {
            return ids__[0];
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        #endregion

        #region Marshaling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void write__(IceInternal.BasicStream os__)
        {
            os__.writeTypeId(ice_staticId());
            os__.startWriteSlice();
            os__.writeByte((byte)type, 7);
            os__.writeLong(timeStamp);
            os__.writeFloatSeq(floatArrayData);
            os__.endWriteSlice();
            base.write__(os__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void read__(IceInternal.BasicStream is__, bool rid__)
        {
            if(rid__)
            {
                /* string myId = */ is__.readTypeId();
            }
            is__.startReadSlice();
            type = (Communication.DataTypeIce)is__.readByte(7);
            timeStamp = is__.readLong();
            floatArrayData = is__.readFloatSeq();
            is__.endReadSlice();
            base.read__(is__, true);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void write__(Ice.OutputStream outS__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type Communication::FloatData was not generated with stream support";
            throw ex;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override void read__(Ice.InputStream inS__, bool rid__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type Communication::FloatData was not generated with stream support";
            throw ex;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface ILoggerData : Ice.Object, ILoggerDataOperations_, ILoggerDataOperationsNC_
    {
    }
}

namespace Communication
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_ILoggerData_sendByteData();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_ILoggerData_sendFloatData();
}

namespace Communication
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface ByteDataPrx : Ice.ObjectPrx
    {
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface FloatDataPrx : Ice.ObjectPrx
    {
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface ILoggerDataPrx : Ice.ObjectPrx
    {
        void sendByteData(Communication.ByteData data);
        void sendByteData(Communication.ByteData data, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Communication.Callback_ILoggerData_sendByteData> begin_sendByteData(Communication.ByteData data);
        Ice.AsyncResult<Communication.Callback_ILoggerData_sendByteData> begin_sendByteData(Communication.ByteData data, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_sendByteData(Communication.ByteData data, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_sendByteData(Communication.ByteData data, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_sendByteData(Ice.AsyncResult r__);

        void sendFloatData(Communication.FloatData data);
        void sendFloatData(Communication.FloatData data, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Communication.Callback_ILoggerData_sendFloatData> begin_sendFloatData(Communication.FloatData data);
        Ice.AsyncResult<Communication.Callback_ILoggerData_sendFloatData> begin_sendFloatData(Communication.FloatData data, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_sendFloatData(Communication.FloatData data, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_sendFloatData(Communication.FloatData data, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_sendFloatData(Ice.AsyncResult r__);
    }
}

namespace Communication
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface ILoggerDataOperations_
    {
        void sendByteData(Communication.ByteData data, Ice.Current current__);

        void sendFloatData(Communication.FloatData data, Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface ILoggerDataOperationsNC_
    {
        void sendByteData(Communication.ByteData data);

        void sendFloatData(Communication.FloatData data);
    }
}

namespace Communication
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class byteSequenceHelper
    {
        public static void write(IceInternal.BasicStream os__, byte[] v__)
        {
            os__.writeByteSeq(v__);
        }

        public static byte[] read(IceInternal.BasicStream is__)
        {
            byte[] v__;
            v__ = is__.readByteSeq();
            return v__;
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class ByteDataPrxHelper : Ice.ObjectPrxHelperBase, ByteDataPrx
    {
        #region Asynchronous operations

        #endregion

        #region Checked and unchecked cast operations

        public static ByteDataPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            ByteDataPrx r = b as ByteDataPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                ByteDataPrxHelper h = new ByteDataPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ByteDataPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            ByteDataPrx r = b as ByteDataPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                ByteDataPrxHelper h = new ByteDataPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ByteDataPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    ByteDataPrxHelper h = new ByteDataPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static ByteDataPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    ByteDataPrxHelper h = new ByteDataPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static ByteDataPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            ByteDataPrx r = b as ByteDataPrx;
            if(r == null)
            {
                ByteDataPrxHelper h = new ByteDataPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ByteDataPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            ByteDataPrxHelper h = new ByteDataPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Communication::ByteData",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        protected override Ice.ObjectDelM_ createDelegateM__()
        {
            return new ByteDataDelM_();
        }

        protected override Ice.ObjectDelD_ createDelegateD__()
        {
            return new ByteDataDelD_();
        }

        public static void write__(IceInternal.BasicStream os__, ByteDataPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static ByteDataPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                ByteDataPrxHelper result = new ByteDataPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class floatSequenceHelper
    {
        public static void write(IceInternal.BasicStream os__, float[] v__)
        {
            os__.writeFloatSeq(v__);
        }

        public static float[] read(IceInternal.BasicStream is__)
        {
            float[] v__;
            v__ = is__.readFloatSeq();
            return v__;
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class FloatDataPrxHelper : Ice.ObjectPrxHelperBase, FloatDataPrx
    {
        #region Asynchronous operations

        #endregion

        #region Checked and unchecked cast operations

        public static FloatDataPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            FloatDataPrx r = b as FloatDataPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                FloatDataPrxHelper h = new FloatDataPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static FloatDataPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            FloatDataPrx r = b as FloatDataPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                FloatDataPrxHelper h = new FloatDataPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static FloatDataPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    FloatDataPrxHelper h = new FloatDataPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static FloatDataPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    FloatDataPrxHelper h = new FloatDataPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static FloatDataPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            FloatDataPrx r = b as FloatDataPrx;
            if(r == null)
            {
                FloatDataPrxHelper h = new FloatDataPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static FloatDataPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            FloatDataPrxHelper h = new FloatDataPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Communication::FloatData",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        protected override Ice.ObjectDelM_ createDelegateM__()
        {
            return new FloatDataDelM_();
        }

        protected override Ice.ObjectDelD_ createDelegateD__()
        {
            return new FloatDataDelD_();
        }

        public static void write__(IceInternal.BasicStream os__, FloatDataPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static FloatDataPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                FloatDataPrxHelper result = new FloatDataPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class ILoggerDataPrxHelper : Ice.ObjectPrxHelperBase, ILoggerDataPrx
    {
        #region Synchronous operations

        public void sendByteData(Communication.ByteData data)
        {
            sendByteData(data, null, false);
        }

        public void sendByteData(Communication.ByteData data, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            sendByteData(data, context__, true);
        }

        private void sendByteData(Communication.ByteData data, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    ILoggerDataDel_ del__ = (ILoggerDataDel_)delBase__;
                    del__.sendByteData(data, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapperRelaxed__(delBase__, ex__, true, ref cnt__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public void sendFloatData(Communication.FloatData data)
        {
            sendFloatData(data, null, false);
        }

        public void sendFloatData(Communication.FloatData data, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            sendFloatData(data, context__, true);
        }

        private void sendFloatData(Communication.FloatData data, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    delBase__ = getDelegate__(false);
                    ILoggerDataDel_ del__ = (ILoggerDataDel_)delBase__;
                    del__.sendFloatData(data, context__);
                    return;
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapperRelaxed__(delBase__, ex__, true, ref cnt__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<Communication.Callback_ILoggerData_sendByteData> begin_sendByteData(Communication.ByteData data)
        {
            return begin_sendByteData(data, null, false, null, null);
        }

        public Ice.AsyncResult<Communication.Callback_ILoggerData_sendByteData> begin_sendByteData(Communication.ByteData data, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_sendByteData(data, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_sendByteData(Communication.ByteData data, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_sendByteData(data, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_sendByteData(Communication.ByteData data, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_sendByteData(data, ctx__, true, cb__, cookie__);
        }

        private const string __sendByteData_name = "sendByteData";

        public void end_sendByteData(Ice.AsyncResult r__)
        {
            end__(r__, __sendByteData_name);
        }

        private Ice.AsyncResult<Communication.Callback_ILoggerData_sendByteData> begin_sendByteData(Communication.ByteData data, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<Communication.Callback_ILoggerData_sendByteData> result__ = new IceInternal.OnewayOutgoingAsync<Communication.Callback_ILoggerData_sendByteData>(this, __sendByteData_name, sendByteData_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__sendByteData_name, Ice.OperationMode.Idempotent, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeObject(data);
                os__.writePendingObjects();
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void sendByteData_completed__(Communication.Callback_ILoggerData_sendByteData cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<Communication.Callback_ILoggerData_sendFloatData> begin_sendFloatData(Communication.FloatData data)
        {
            return begin_sendFloatData(data, null, false, null, null);
        }

        public Ice.AsyncResult<Communication.Callback_ILoggerData_sendFloatData> begin_sendFloatData(Communication.FloatData data, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_sendFloatData(data, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_sendFloatData(Communication.FloatData data, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_sendFloatData(data, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_sendFloatData(Communication.FloatData data, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_sendFloatData(data, ctx__, true, cb__, cookie__);
        }

        private const string __sendFloatData_name = "sendFloatData";

        public void end_sendFloatData(Ice.AsyncResult r__)
        {
            end__(r__, __sendFloatData_name);
        }

        private Ice.AsyncResult<Communication.Callback_ILoggerData_sendFloatData> begin_sendFloatData(Communication.FloatData data, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<Communication.Callback_ILoggerData_sendFloatData> result__ = new IceInternal.OnewayOutgoingAsync<Communication.Callback_ILoggerData_sendFloatData>(this, __sendFloatData_name, sendFloatData_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__sendFloatData_name, Ice.OperationMode.Idempotent, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeObject(data);
                os__.writePendingObjects();
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void sendFloatData_completed__(Communication.Callback_ILoggerData_sendFloatData cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static ILoggerDataPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            ILoggerDataPrx r = b as ILoggerDataPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                ILoggerDataPrxHelper h = new ILoggerDataPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ILoggerDataPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            ILoggerDataPrx r = b as ILoggerDataPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                ILoggerDataPrxHelper h = new ILoggerDataPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ILoggerDataPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    ILoggerDataPrxHelper h = new ILoggerDataPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static ILoggerDataPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    ILoggerDataPrxHelper h = new ILoggerDataPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static ILoggerDataPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            ILoggerDataPrx r = b as ILoggerDataPrx;
            if(r == null)
            {
                ILoggerDataPrxHelper h = new ILoggerDataPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ILoggerDataPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            ILoggerDataPrxHelper h = new ILoggerDataPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Communication::ILoggerData",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        protected override Ice.ObjectDelM_ createDelegateM__()
        {
            return new ILoggerDataDelM_();
        }

        protected override Ice.ObjectDelD_ createDelegateD__()
        {
            return new ILoggerDataDelD_();
        }

        public static void write__(IceInternal.BasicStream os__, ILoggerDataPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static ILoggerDataPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                ILoggerDataPrxHelper result = new ILoggerDataPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }
}

namespace Communication
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface ByteDataDel_ : Ice.ObjectDel_
    {
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface FloatDataDel_ : Ice.ObjectDel_
    {
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface ILoggerDataDel_ : Ice.ObjectDel_
    {
        void sendByteData(Communication.ByteData data, _System.Collections.Generic.Dictionary<string, string> context__);

        void sendFloatData(Communication.FloatData data, _System.Collections.Generic.Dictionary<string, string> context__);
    }
}

namespace Communication
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class ByteDataDelM_ : Ice.ObjectDelM_, ByteDataDel_
    {
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class FloatDataDelM_ : Ice.ObjectDelM_, FloatDataDel_
    {
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class ILoggerDataDelM_ : Ice.ObjectDelM_, ILoggerDataDel_
    {
        public void sendByteData(Communication.ByteData data, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("sendByteData", Ice.OperationMode.Idempotent, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeObject(data);
                    os__.writePendingObjects();
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void sendFloatData(Communication.FloatData data, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("sendFloatData", Ice.OperationMode.Idempotent, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeObject(data);
                    os__.writePendingObjects();
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(!og__.istr().isEmpty())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.istr().skipEmptyEncaps();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }
    }
}

namespace Communication
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class ByteDataDelD_ : Ice.ObjectDelD_, ByteDataDel_
    {
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class FloatDataDelD_ : Ice.ObjectDelD_, FloatDataDel_
    {
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class ILoggerDataDelD_ : Ice.ObjectDelD_, ILoggerDataDel_
    {
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void sendByteData(Communication.ByteData data, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "sendByteData", Ice.OperationMode.Idempotent, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                ILoggerData servant__ = null;
                try
                {
                    servant__ = (ILoggerData)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.sendByteData(data, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void sendFloatData(Communication.FloatData data, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "sendFloatData", Ice.OperationMode.Idempotent, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                ILoggerData servant__ = null;
                try
                {
                    servant__ = (ILoggerData)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.sendFloatData(data, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }
    }
}

namespace Communication
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public abstract class ILoggerDataDisp_ : Ice.ObjectImpl, ILoggerData
    {
        #region Slice operations

        public void sendByteData(Communication.ByteData data)
        {
            sendByteData(data, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void sendByteData(Communication.ByteData data, Ice.Current current__);

        public void sendFloatData(Communication.FloatData data)
        {
            sendFloatData(data, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void sendFloatData(Communication.FloatData data, Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::Communication::ILoggerData",
            "::Ice::Object"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[0];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus sendByteData___(ILoggerData obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Idempotent, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            IceInternal.ParamPatcher<Communication.ByteData>data_PP = new IceInternal.ParamPatcher<Communication.ByteData>("::Communication::ByteData");
            is__.readObject(data_PP);
            is__.readPendingObjects();
            is__.endReadEncaps();
            obj__.sendByteData((Communication.ByteData)data_PP.value, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus sendFloatData___(ILoggerData obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Idempotent, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            IceInternal.ParamPatcher<Communication.FloatData>data_PP = new IceInternal.ParamPatcher<Communication.FloatData>("::Communication::FloatData");
            is__.readObject(data_PP);
            is__.readPendingObjects();
            is__.endReadEncaps();
            obj__.sendFloatData((Communication.FloatData)data_PP.value, current__);
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "sendByteData",
            "sendFloatData"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return ice_id___(this, inS__, current__);
                }
                case 1:
                {
                    return ice_ids___(this, inS__, current__);
                }
                case 2:
                {
                    return ice_isA___(this, inS__, current__);
                }
                case 3:
                {
                    return ice_ping___(this, inS__, current__);
                }
                case 4:
                {
                    return sendByteData___(this, inS__, current__);
                }
                case 5:
                {
                    return sendFloatData___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        public override void write__(IceInternal.BasicStream os__)
        {
            os__.writeTypeId(ice_staticId());
            os__.startWriteSlice();
            os__.endWriteSlice();
            base.write__(os__);
        }

        public override void read__(IceInternal.BasicStream is__, bool rid__)
        {
            if(rid__)
            {
                /* string myId = */ is__.readTypeId();
            }
            is__.startReadSlice();
            is__.endReadSlice();
            base.read__(is__, true);
        }

        public override void write__(Ice.OutputStream outS__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type Communication::ILoggerData was not generated with stream support";
            throw ex;
        }

        public override void read__(Ice.InputStream inS__, bool rid__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type Communication::ILoggerData was not generated with stream support";
            throw ex;
        }

        #endregion
    }
}
